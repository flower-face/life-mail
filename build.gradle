group = 'com.mail'
version = '0.0.1-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
        javaVersion = JavaVersion.VERSION_1_8
    }
    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: "jacoco"
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = "${javaVersion}"
    targetCompatibility = "${javaVersion}"

    repositories {
        mavenLocal()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
        mavenCentral()
    }

    configurations.all {
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    // JavaDoc utf8
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }

    // 多模块打包需要配置
    jar.enabled = true

    jacoco {
        toolVersion = "0.8.1"
    }

    // code coverage param
    jacocoTestReport {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    // code coverage
    check.dependsOn jacocoTestReport

    configurations.all {
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    // JavaDoc utf8
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
        options.addStringOption('charSet', 'UTF-8')
    }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-web')

        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

        compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
        compile group: 'com.alibaba', name: 'fastjson', version: '1.2.47'

        compileOnly('org.projectlombok:lombok')
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }
}


